pipeline {
  agent any

  tools {
    nodejs 'NodeJS-24.0.4'
  }

  environment {
    CI = 'true'
    DOCKER_IMAGE = "namgyelhuk708/nodejs-app"
    DOCKER_CREDENTIALS_ID = "dockerhub-creds"
  }

  stages {
    stage('Install') {
      steps {
        sh 'npm install'
      }
    }

    stage('Build') {
      steps {
        sh 'npm run build'
      }
    }

    stage('Test') {
      steps {
        sh 'npm test'
      }
      post {
        always {
          junit 'junit.xml'
        }
      }
    }

    stage('Docker Build') {
      steps {
        script {
          // Add debug output
          echo "Building Docker image: ${DOCKER_IMAGE}:${BUILD_NUMBER}"
          dockerImage = docker.build("${DOCKER_IMAGE}:${BUILD_NUMBER}")
        }
      }
    }

    stage('Docker Push') {
      steps {
        script {
          // Add more debug info
          echo "Pushing to Docker Hub with credentials ID: ${DOCKER_CREDENTIALS_ID}"
          echo "Image tags: ${DOCKER_IMAGE}:${BUILD_NUMBER} and latest"
          
          try {
            docker.withRegistry('', DOCKER_CREDENTIALS_ID) {
              dockerImage.push()
              dockerImage.push('latest')
              echo "Push successful!"
            }
          } catch (Exception e) {
            echo "Push failed: ${e.getMessage()}"
            // Print more debug info
            sh 'docker images'
            sh 'echo $DOCKER_CREDENTIALS_ID'
            error("Docker push failed")
          }
        }
      }
    }

    stage('Deploy') {
      steps {
        script {
          if (env.BRANCH_NAME == 'main') {
            sh 'echo Deploying to production...'
          } else {
            sh 'echo Deploying to staging...'
          }
        }
      }
    }
  }
}